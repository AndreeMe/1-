#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "дкл_СписокНастроекСкладовЛифтов" Тогда
		 Элементы.Список.Обновить();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)   
	УстановитьОтбор();         
КонецПроцедуры     

&НаКлиенте
Процедура ПриОткрытии(Отказ)                                                      
	
	ПодключитьОбработчикОжидания("ОбновлениеСтатусаЛифтов", 0.1, Истина);
	
	#Если НЕ ВебКлиент Тогда
		
		ГСЧ = Новый ГенераторСлучайныхЧисел();
		СлучайноеЧисло = ГСЧ.СлучайноеЧисло(1500, 2500) / 100;   
		ПодключитьОбработчикОжидания("ОбновлениеСтатусаЛифтов", СлучайноеЧисло, Ложь);
	
	#Иначе
		
		ПодключитьОбработчикОжидания("ОбновлениеСтатусаЛифтов", 15, Ложь);
		
	#КонецЕсли
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПроверитьСоединения(Команда)
	ОбновлениеСтатусаЛифтовНаСервере();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновлениеСтатусаЛифтов() Экспорт
	ОбновлениеСтатусаЛифтовНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновлениеСтатусаЛифтовНаСервере()  
	Справочники.дкл_НастройкиСкладовЛифтов.ПроверитьСоединения();
КонецПроцедуры

&НаСервере
Процедура УстановитьОтбор()         
	
	Список.Параметры.УстановитьЗначениеПараметра("Ошибка"	, Ошибка);
	Список.Параметры.УстановитьЗначениеПараметра("ВРаботе"	, ВРаботе);
	Список.Параметры.УстановитьЗначениеПараметра("НаСвязи"	, НаСвязи);
		
КонецПроцедуры

#КонецОбласти
