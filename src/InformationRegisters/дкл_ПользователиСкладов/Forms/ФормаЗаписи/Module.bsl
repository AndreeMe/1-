#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("ЗначениеКопирования") Тогда    
		Если ЗначениеЗаполнено(Параметры.ЗначениеКопирования.userId) Тогда   
			// при копировании:
			Запись.userId = Строка(Новый УникальныйИдентификатор);
			Запись.login = Неопределено;	
			Запись.password = Неопределено;	
			Запись.remoteLogin = Неопределено;	
			Запись.remotePassword = Неопределено;	
			Запись.rfid = Неопределено; 
			Запись.ПроверятьАвторизациюНаАСХ = Ложь;    
			Запись.active_ = Ложь;
			Запись.УправлениеЧерез1С = Ложь;  
			Запись.Пользователь = Неопределено;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимостьДоступность();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура АктивнаПриИзменении(Элемент)
	УстановитьВидимостьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	ПользовательПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура loginПриИзменении(Элемент)
	Запись.login = СокрЛП(СтрЗаменить(Запись.login, " ", ""));
КонецПроцедуры

&НаКлиенте
Процедура УправлениеЧерез1СПриИзменении(Элемент)
	Если Запись.УправлениеЧерез1С И НЕ ЕстьРольДляУправленияПолками(Запись.Пользователь)Тогда
		Запись.УправлениеЧерез1С = Ложь;
		ОбщегоНазначенияКлиент.СообщитьПользователю(
			"У пользователя не достаточно прав для управления АСХ");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сгенерировать(Команда)
	Если ЗначениеЗаполнено(Запись.Пользователь) Тогда
		Запись.userId = Строка(Запись.Пользователь.УникальныйИдентификатор());
	Иначе
		Запись.userId = Строка(Новый УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВАСХ(Команда)       
	
	Если Модифицированность Тогда
		ПараметрыЗаписи = Новый Структура;
		ПараметрыЗаписи.Вставить("ОтправкаВАСХ");
		Записать(ПараметрыЗаписи);	
	КонецЕсли;
	
	Если ПроверитьЗаполнение() Тогда
		ОтправитьВАСХНаСервере();	
	КонецЕсли; 

	Прочитать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьВидимостьДоступность()
	
	Если Запись.active_ Тогда
		Элементы.ГруппаАСХОпции.Видимость = Истина;
	Иначе
		Элементы.ГруппаАСХОпции.Видимость = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Запись.userId) Тогда
		Элементы.Сгенерировать.Видимость = Ложь;
	Иначе
		Элементы.Сгенерировать.Видимость = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПользовательПриИзмененииНаСервере()

	Реквизиты = 
		РегистрыСведений.дкл_ПользователиСкладов.ПолучитьРеквизитыПользователяСклада(Запись);
		
	Если ЗначениеЗаполнено(Запись.userId) Тогда
		ЗаполнитьЗначенияСвойств(Запись, Реквизиты, , "userId, login");	
	Иначе
		ЗаполнитьЗначенияСвойств(Запись, Реквизиты, , "login");	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Запись.login) Тогда
		ЗаполнитьЗначенияСвойств(Запись, Реквизиты, "login");	
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Запись.Пользователь) Тогда
		Запись.ПроверятьАвторизациюНаАСХ = Ложь;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьРольДляУправленияПолками(Пользователь)
	Возврат РегистрыСведений.дкл_ПользователиСкладов.ЕстьРольДляУправленияПолками(
					Пользователь);
КонецФункции

&НаСервере
Процедура ОтправитьВАСХНаСервере()    
	
	дкл_ОбменДаннымиСервер.ВыгрузитьПользователейСклада(
		Запись.НастройкаСклада, ,Запись.userId);
		
КонецПроцедуры

#КонецОбласти

