#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;	
	КонецЕсли;                             
	
	Если Количество() = 0 Тогда
		Возврат;	
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("НеДополнять") Тогда
		Возврат;	
	КонецЕсли;                                       
	
	// дозаполнить данные пользователя
	Для каждого ТекущаяСтрока Из ЭтотОбъект Цикл
		
		// проверка изменения кадровых данных		
		
		РеквизитыПользователя = 
			РегистрыСведений.дкл_ПользователиСкладов.ПолучитьРеквизитыПользователяСклада(
				ТекущаяСтрока);

		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.userId) 
				И ЗначениеЗаполнено(РеквизитыПользователя.userId) Тогда
			ТекущаяСтрока.userId = РеквизитыПользователя.userId;		
		КонецЕсли;
		
		Если НЕ ТекущаяСтрока.lastName = РеквизитыПользователя.lastName 
				И ЗначениеЗаполнено(РеквизитыПользователя.lastName) Тогда
			ТекущаяСтрока.lastName = РеквизитыПользователя.lastName;
		КонецЕсли;
		
		Если НЕ ТекущаяСтрока.firstName  = РеквизитыПользователя.firstName 
				И ЗначениеЗаполнено(РеквизитыПользователя.firstName) Тогда
			ТекущаяСтрока.firstName  = РеквизитыПользователя.firstName;
		КонецЕсли;
		
		Если НЕ ТекущаяСтрока.middleName = РеквизитыПользователя.middleName 
				И ЗначениеЗаполнено(РеквизитыПользователя.middleName) Тогда
			ТекущаяСтрока.middleName = РеквизитыПользователя.middleName;
		КонецЕсли;
		
		Если НЕ ТекущаяСтрока.position = РеквизитыПользователя.position 
				И ЗначениеЗаполнено(РеквизитыПользователя.position) Тогда
			ТекущаяСтрока.position = РеквизитыПользователя.position; 
		КонецЕсли;
		
		Если ТекущаяСтрока.Роль = Перечисления.дкл_РолиПользователей.Администратор Тогда
			Роль = "ADMIN";
		Иначе 
			Роль = "OPERATOR";			
		КонецЕсли;      

		ТекущаяСтрока.role = Роль;
		
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока.login) И ЗначениеЗаполнено(ТекущаяСтрока.lastName) Тогда 
			ТекущаяСтрока.login = дкл_ОбщегоНазначенияСервер.Транслит(ТекущаяСтрока.lastName);	
		КонецЕсли;
		
		ТекущаяСтрока.Статус = Перечисления.дкл_Статусы.Изменено;			
		ТекущаяСтрока.ДатаСтатуса = ТекущаяДатаСеанса();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если Количество()= 0 Тогда
		ПроверяемыеРеквизиты.Очистить();		
	КонецЕсли;                                                              
	
	ДлинаПароля = 5;

	// Добавить проверку, чтобы один из двух параметров "Пароль в АСХ" и "RFID" заполнены, 
	// и длина заполнения не менее 5 символов. 
	Для Каждого Запись Из ЭтотОбъект Цикл

		// пользователь технически может быть пустым:
		// - если выключена опция ПроверятьАвторизациюНаАСХ и если выключено УправлениеЧерез1С
		// (не запретить ли пустого пользователя, если или требуется управление из 1С или пользователь активен в лифте???
		// но тогда не запишутся польззователи, введенные на стороне АСХ, они же приходят без пользователя)
		Если НЕ Запись.ПроверятьАвторизациюНаАСХ И НЕ Запись.УправлениеЧерез1С Тогда
			//@skip-check wrong-string-literal-content
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Пользователь"));	
		КонецЕсли;
		
		// проверка дублирования пользователя, если он заполнен
		// проверка дублирования логина
		//@skip-check query-in-loop
		Если ЕстьДублированиеПользователя(Запись) 
				ИЛИ ЕстьДублированиеЛогинаПользователя(Запись) Тогда
			Отказ = Истина;
		КонецЕсли;
		
		Если НЕ Запись.active_ Тогда
			
			// но эти реквизиты все-таки надо проверять перед отправкой в АСХ...
			//@skip-check wrong-string-literal-content
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("userId"));	
			//@skip-check wrong-string-literal-content
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("login"));	
			//@skip-check wrong-string-literal-content
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("firstName"));	
			//@skip-check wrong-string-literal-content
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("lastName"));	
			// -
			
			//@skip-check wrong-string-literal-content
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("Роль"));	
			//@skip-check wrong-string-literal-content
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("password"));	
			//@skip-check wrong-string-literal-content
			ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("rfid"));	
			
		Иначе

			Если СтрДлина(Запись.password) >= ДлинаПароля Тогда
				//@skip-check wrong-string-literal-content
				ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("rfid"));	
			ИначеЕсли СтрДлина(Запись.rfid) >= ДлинаПароля Тогда
				//@skip-check wrong-string-literal-content
				ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("password"));	
			КонецЕсли;
			
			Если СтрДлина(Запись.password) < ДлинаПароля И СтрДлина(Запись.rfid) < ДлинаПароля Тогда
				//@skip-check wrong-string-literal-content
				ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("password"));	
				//@skip-check wrong-string-literal-content
				ПроверяемыеРеквизиты.Удалить(ПроверяемыеРеквизиты.Найти("rfid"));	
				Текст = СтрШаблон("Длина пароля или RFID должна быть больше %1 символов.", ДлинаПароля);
				ОбщегоНазначения.СообщитьПользователю(Текст,,,,Отказ);	          
			КонецЕсли;
			
		КонецЕсли;

	КонецЦикла;	
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЕстьДублированиеПользователя(Запись)

	// временно отключил проверку...
	Возврат Ложь;
	
	Если НЕ ЗначениеЗаполнено(Запись.Пользователь) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	дкл_ПользователиСкладов.userId КАК userId,
	|	дкл_ПользователиСкладов.login КАК login
	|ИЗ
	|	РегистрСведений.дкл_ПользователиСкладов КАК дкл_ПользователиСкладов
	|ГДЕ
	|	дкл_ПользователиСкладов.Пользователь = &Пользователь
	|	И дкл_ПользователиСкладов.userId <> &userId
	|	И дкл_ПользователиСкладов.НастройкаСклада = &НастройкаСклада";
	
	Запрос.УстановитьПараметр("НастройкаСклада", Запись.НастройкаСклада);
	Запрос.УстановитьПараметр("userId", Запись.userId);
	Запрос.УстановитьПараметр("Пользователь", Запись.Пользователь);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Текст = "Такой пользователь уже есть (логин %1,  userId %2)";
		Текст = СтрШаблон(Текст, ВыборкаДетальныеЗаписи.login, ВыборкаДетальныеЗаписи.userId);
		ОбщегоНазначения.СообщитьПользователю(Текст,,"Пользователь","Запись.Пользователь");
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

Функция ЕстьДублированиеЛогинаПользователя(Запись)
	
	// временно отключил проверку...
	Возврат Ложь;
	
	Если НЕ ЗначениеЗаполнено(Запись.login) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	дкл_ПользователиСкладов.Пользователь КАК Пользователь
		|ИЗ
		|	РегистрСведений.дкл_ПользователиСкладов КАК дкл_ПользователиСкладов
		|ГДЕ
		|	дкл_ПользователиСкладов.login = &login
		|	И НЕ дкл_ПользователиСкладов.Пользователь = &Пользователь
		|	И НЕ дкл_ПользователиСкладов.Пользователь = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|	И дкл_ПользователиСкладов.НастройкаСклада = &НастройкаСклада";
	
	Запрос.УстановитьПараметр("login"			, Запись.login);
	Запрос.УстановитьПараметр("Пользователь"	, Запись.Пользователь);
	Запрос.УстановитьПараметр("НастройкаСклада"	, Запись.НастройкаСклада);
	
	РезультатЗапроса = Запрос.Выполнить();                           
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Текст = "С логином %1 уже есть пользователь %2";	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Текст = СтрШаблон(Текст, Запись.login, ВыборкаДетальныеЗаписи.Пользователь);
		ОбщегоНазначения.СообщитьПользователю(Текст,,"login","Запись.login");
		
	КонецЦикла;

	Возврат Истина;
	
КонецФункции

#КонецОбласти 

#КонецЕсли
   