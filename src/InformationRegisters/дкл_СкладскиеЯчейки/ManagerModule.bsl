#Область ПрограммныйИнтерфейс              

Функция СкладскиеЯчейкиСклада(Склад) Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СкладскиеЯчейки.Ссылка КАК Ссылка,
		|	СкладскиеЯчейки.Ссылка КАК СкладскаяЯчейка
		|ИЗ
		|	Справочник.СкладскиеЯчейки КАК СкладскиеЯчейки
		|ГДЕ
		|	СкладскиеЯчейки.Владелец = &Владелец";
	
	Запрос.УстановитьПараметр("Владелец", Склад);
	РезультатЗапроса = Запрос.Выполнить();   
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат РезультатЗапроса.Выбрать();
	
КонецФункции

Функция ПроверитьЗаполение(НастройкаСклада, СкладскиеЯчейки) Экспорт
	
	Запрос = Новый Запрос;             
	Запрос.УстановитьПараметр("НастройкаСклада", НастройкаСклада); 
	Запрос.УстановитьПараметр("СкладскиеЯчейки", СкладскиеЯчейки);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	дкл_СкладскиеЯчейки.СкладскаяЯчейка КАК СкладскаяЯчейка
		|ИЗ
		|	РегистрСведений.дкл_СкладскиеЯчейки КАК дкл_СкладскиеЯчейки
		|ГДЕ
		|	дкл_СкладскиеЯчейки.СкладскаяЯчейка В(&СкладскиеЯчейки)
		|	И дкл_СкладскиеЯчейки.НастройкаСклада = &НастройкаСклада
		|	И НЕ дкл_СкладскиеЯчейки.trayNumber = 0
		|	И НЕ дкл_СкладскиеЯчейки.poseX = """"
		|	И НЕ дкл_СкладскиеЯчейки.poseY = """"
		|	И НЕ дкл_СкладскиеЯчейки.width = """"
		|	И НЕ дкл_СкладскиеЯчейки.depth = """"";
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить(); 
	УстановитьПривилегированныйРежим(Ложь);
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат Ложь; // что-то не заполнено
	Иначе 
		Возврат Истина; // все заполнено
	КонецЕсли;
	
КонецФункции

Процедура ОтправитьВАСХ(НастройкаСклада, СкладскиеЯчейки) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;             
	Запрос.УстановитьПараметр("НастройкаСклада", НастройкаСклада);
	Запрос.УстановитьПараметр("СкладскиеЯчейки", СкладскиеЯчейки);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	дкл_СкладскиеЯчейки.storageId КАК storageId,
		|	дкл_СкладскиеЯчейки.itemId КАК itemId,
		|	дкл_СкладскиеЯчейки.trayNumber КАК trayNumber,
		|	дкл_СкладскиеЯчейки.poseX КАК poseX,
		|	дкл_СкладскиеЯчейки.poseY КАК poseY,
		|	дкл_СкладскиеЯчейки.width КАК width,
		|	дкл_СкладскиеЯчейки.depth КАК depth,
		|	дкл_СкладскиеЯчейки.barcode КАК barcode,
		|	дкл_СкладскиеЯчейки.СкладскаяЯчейка КАК СкладскаяЯчейка,
		|	дкл_СкладскиеЯчейки.Статус КАК Статус
		|ИЗ
		|	РегистрСведений.дкл_СкладскиеЯчейки КАК дкл_СкладскиеЯчейки
		|ГДЕ
		|	дкл_СкладскиеЯчейки.СкладскаяЯчейка В(&СкладскиеЯчейки)
		|	И НЕ дкл_СкладскиеЯчейки.trayNumber = 0
		|	И НЕ дкл_СкладскиеЯчейки.poseX = """"
		|	И НЕ дкл_СкладскиеЯчейки.poseY = """"
		|	И НЕ дкл_СкладскиеЯчейки.width = """"
		|	И НЕ дкл_СкладскиеЯчейки.depth = """"
		|	И дкл_СкладскиеЯчейки.НастройкаСклада = &НастройкаСклада";
	
	РезультатЗапроса = Запрос.Выполнить();
	СкладскиеЯчейки = ОбщегоНазначения.ТаблицаЗначенийВМассив(РезультатЗапроса.Выгрузить());
	
	дкл_ОбменДаннымиСервер.ВыгрузитьСкладскиеЯчейки(
			НастройкаСклада, СкладскиеЯчейки);	
			
	УстановитьПривилегированныйРежим(Ложь);			
	
КонецПроцедуры

Процедура УдалитьИзАСХ(НастройкаСклада, СкладскиеЯчейки) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;             
	Запрос.УстановитьПараметр("НастройкаСклада", НастройкаСклада); 
	Запрос.УстановитьПараметр("СкладскиеЯчейки", СкладскиеЯчейки);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	дкл_СкладскиеЯчейки.storageId КАК storageId,
		|	дкл_СкладскиеЯчейки.СкладскаяЯчейка КАК СкладскаяЯчейка,
		|	дкл_СкладскиеЯчейки.Статус КАК Статус
		|ИЗ
		|	РегистрСведений.дкл_СкладскиеЯчейки КАК дкл_СкладскиеЯчейки
		|ГДЕ
		|	дкл_СкладскиеЯчейки.СкладскаяЯчейка В(&СкладскиеЯчейки)
		|	И дкл_СкладскиеЯчейки.НастройкаСклада = &НастройкаСклада
		|	И НЕ дкл_СкладскиеЯчейки.storageId = """"";
	
	РезультатЗапроса = Запрос.Выполнить();       
	
	Если РезультатЗапроса.Пустой() Тогда
		ОбщегоНазначения.СообщитьПользователю("Нет ячеек для удаления.");
		Возврат;
	КонецЕсли;
	
	СкладскиеЯчейки = ОбщегоНазначения.ТаблицаЗначенийВМассив(РезультатЗапроса.Выгрузить());
	
	дкл_ОбменДаннымиСервер.УдалитьСкладскиеЯчейки(
			НастройкаСклада, СкладскиеЯчейки);	
			
	УстановитьПривилегированныйРежим(Ложь);
			
КонецПроцедуры                               

Процедура ОбновитьСтатус(НастройкаСклада, СкладскаяЯчейка, Статус, ДатаСтатуса = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДатаСтатуса) Тогда
		ДатаСтатуса = ТекущаяДатаСеанса();
	КонецЕсли;                                                           
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.дкл_СкладскиеЯчейки.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.СкладскаяЯчейка.Установить(СкладскаяЯчейка);
	НаборЗаписей.Прочитать();
	
	Для каждого Запись Из НаборЗаписей Цикл
		Запись.Статус = Статус;
		Запись.ДатаСтатуса = ДатаСтатуса;
	КонецЦикла;
	
	// чтобы отменить обработчик "Перед записью"...	
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	НаборЗаписей.Записать();             
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура УдалитьСкладскуюЯчейку(НастройкаСклада, СкладскаяЯчейка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписей = РегистрыСведений.дкл_СкладскиеЯчейки.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.НастройкаСклада.Установить(НастройкаСклада);
	НаборЗаписей.Отбор.СкладскаяЯчейка.Установить(СкладскаяЯчейка);
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	НаборЗаписей.Записать();             
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий
//Код процедур и функций
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
//Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
//Код процедур и функций
#КонецОбласти
