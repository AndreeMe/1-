#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//@skip-check export-procedure-missing-comment
//@skip-check doc-comment-parameter-section
Процедура ЗаписатьСообщениеВОчередьСообщений(ДанныеСообщенияОбмена) Экспорт 

	УстановитьПривилегированныйРежим(Истина);
	
	Если НЕ ЗначениеЗаполнено(ДанныеСообщенияОбмена.IDСообщения) Тогда
		ДанныеСообщенияОбмена.IDСообщения = Новый УникальныйИдентификатор;
	КонецЕсли;

	МенеджерЗаписи = СоздатьМенеджерЗаписи();
	ЗаполнитьЗначенияСвойств(МенеджерЗаписи, ДанныеСообщенияОбмена);
	
	Дата = Дата(1,1,1);
	Если ДанныеСообщенияОбмена.Свойство("Дата") Тогда
		Дата = ДанныеСообщенияОбмена.Дата;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Дата) Тогда
		Дата = ТекущаяДатаСеанса();
	КонецЕсли;

	МенеджерЗаписи.Дата 		= Дата;
	МенеджерЗаписи.Месяц 		= НачалоМесяца(Дата);

	Если ДанныеСообщенияОбмена.Обработано Тогда
		МенеджерЗаписи.ДатаОбработки = ТекущаяДатаСеанса();
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(ДанныеСообщенияОбмена.СсылкаНаОбъект) Тогда
		ТипЗначения = ТипЗнч(ДанныеСообщенияОбмена.СсылкаНаОбъект);
		ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗначения);
		Если Метаданные.Документы.Содержит(ОбъектМетаданных) 
			ИЛИ Метаданные.Справочники.Содержит(ОбъектМетаданных) Тогда
				МенеджерЗаписи.НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(ДанныеСообщенияОбмена.СсылкаНаОбъект);
				МенеджерЗаписи.СсылкаНаОбъект = ДанныеСообщенияОбмена.СсылкаНаОбъект;
		КонецЕсли;
	КонецЕсли; 
	МенеджерЗаписи.Записать();
	
	// иначе могут появиться двойные сообщения...
	ЗаполнитьЗначенияСвойств(ДанныеСообщенияОбмена, МенеджерЗаписи);	
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ВыгрузитьВФоне(ДанныеСообщенияОбмена) Экспорт
	
	Асинхронно = Истина;
	
	ПараметрыФоновогоЗадания = Новый Массив;
	ПараметрыФоновогоЗадания.Добавить(ДанныеСообщенияОбмена); 
	ПараметрыФоновогоЗадания.Добавить(Асинхронно); 
	ФоновыеЗадания.Выполнить("дкл_Обработчики.Выгрузить",
				ПараметрыФоновогоЗадания, Новый УникальныйИдентификатор, 
					"Выгрузить сообщение дкл_"); 	

КонецПроцедуры

Функция Выгрузить(ДанныеСообщенияОбмена, Асинхронно = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Приложение = РегистрыСведений.дкл_Обработки.ПодключитьОбработку(
					ДанныеСообщенияОбмена.ТипСообщения, 
							ДанныеСообщенияОбмена.Направление);
	
							
	//@skip-check structure-consructor-too-many-keys
	Результат = Новый Структура("СсылкаНаОбъект, Обработано, Ответ, СообщениеОбОшибке, Подробно");
	
	Если Приложение = Неопределено Тогда
		Результат.СообщениеОбОшибке = "Не найден обработчик";
	Иначе
		Попытка
			Результат = Приложение.ВыполнитьПриложение(ДанныеСообщенияОбмена);	
		Исключение
			ОбщегоНазначения.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));//
		КонецПопытки;
	КонецЕсли; 

	НаборЗаписей = РегистрыСведений.дкл_ОчередьСообщений.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.IDСообщения.Установить(ДанныеСообщенияОбмена.IDСообщения);
	НаборЗаписей.Прочитать();

	Для каждого Запись Из НаборЗаписей Цикл
		
		ЗаполнитьЗначенияСвойств(Запись, Результат);		
		Запись.ДатаОбработки = ТекущаяДатаСеанса();
		Если ЗначениеЗаполнено(Запись.СсылкаНаОбъект) Тогда
			ТипЗначения = ТипЗнч(Запись.СсылкаНаОбъект);
			ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗначения);
			Если Метаданные.Документы.Содержит(ОбъектМетаданных) ИЛИ Метаданные.Справочники.Содержит(ОбъектМетаданных) Тогда
				Запись.НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(Запись.СсылкаНаОбъект);
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла;
	
	НаборЗаписей.Записать();
							
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;

Конецфункции

Функция ОбработкаОчередиСообщений(ТолькоID = Неопределено, КромеID = Неопределено, Ответ = "") Экспорт

	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	
	Если ЗначениеЗаполнено(ТолькоID) Тогда
		
		Запрос.УстановитьПараметр("ТолькоID", ТолькоID); 
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Очередь.IDСообщения
		|ИЗ
		|	НЕ Очередь.Обработано
		|	РегистрСведений.дкл_ОчередьСообщений КАК Очередь
		|ГДЕ
		|	И НЕ Очередь.IDСообщения = &ТолькоID";
		
	Иначе
		
		Если ЗначениеЗаполнено(КромеID) Тогда
			Запрос.УстановитьПараметр("КромеID", КромеID); 
		Иначе		
			Запрос.УстановитьПараметр("КромеID", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000")); 
		КонецЕсли; 
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Очередь.IDСообщения
		|ИЗ
		|	РегистрСведений.дкл_ОчередьСообщений КАК Очередь
		|ГДЕ
		|	НЕ Очередь.Обработано
		|	И НЕ Очередь.ТипСообщения = ЗНАЧЕНИЕ(Справочник.дкл_ТипыСообщений.ПустаяСсылка)
		|	И НЕ Очередь.IDСообщения = &КромеID";
		
	КонецЕсли; 
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		//@skip-check query-in-loop
		ОбработатьСообщение(ВыборкаДетальныеЗаписи.IDСообщения) ;
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Истина;
	
КонецФункции

//@skip-check export-procedure-missing-comment
//@skip-check doc-comment-parameter-section
Процедура ОбработатьСообщениеВФоне(IDСообщения, ВключаяОбработанное = Ложь, ПростаяПередачаПараметров = Истина) Экспорт
	
	ПараметрыФоновогоЗадания = Новый Массив;
	ПараметрыФоновогоЗадания.Добавить(IDСообщения); 
	ПараметрыФоновогоЗадания.Добавить(ВключаяОбработанное); 
	ПараметрыФоновогоЗадания.Добавить(ПростаяПередачаПараметров); 
	//@skip-check wrong-string-literal-content
	ФоновыеЗадания.Выполнить("дкл_Обработчики.ОбработатьСообщение",
				ПараметрыФоновогоЗадания, Новый УникальныйИдентификатор, 
					"Обработать сообщение"); 	
	
КонецПроцедуры

//@skip-check export-procedure-missing-comment
//@skip-check doc-comment-export-function-return-section
//@skip-check doc-comment-parameter-section
Функция ОбработатьСообщение(
		IDСообщения, ОбработатьОбработанное = Ложь, 
			ПростаяПередачаПараметров = Истина, УстановитьПризнакОбработано = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ОбработатьОбработанное", ОбработатьОбработанное);
	Запрос.УстановитьПараметр("ПростаяПередачаПараметров", ПростаяПередачаПараметров);
	Запрос.УстановитьПараметр("IDСообщения", IDСообщения);
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	&ПростаяПередачаПараметров КАК ПростаяПередачаПараметров,
		|	дкл_ОчередьСообщений.IDСообщения КАК IDСообщения,
		|	дкл_ОчередьСообщений.Дата КАК Дата,
		|	дкл_ОчередьСообщений.Направление КАК Направление,
		|	дкл_ОчередьСообщений.ТипСообщения КАК ТипСообщения,
		|	дкл_ОчередьСообщений.ХранилищеЗначения КАК ХранилищеЗначения,
		|	дкл_ОчередьСообщений.СсылкаНаОбъект КАК СсылкаНаОбъект,
		|	дкл_ОчередьСообщений.НавигационнаяСсылка КАК НавигационнаяСсылка,
		|	дкл_ОчередьСообщений.Обработано КАК Обработано,
		|	дкл_ОчередьСообщений.Сообщение КАК Сообщение,
		|	дкл_ОчередьСообщений.НастройкаСклада КАК НастройкаСклада
		|ИЗ
		|	РегистрСведений.дкл_ОчередьСообщений КАК дкл_ОчередьСообщений
		|ГДЕ
		|	дкл_ОчередьСообщений.IDСообщения = &IDСообщения
		|	И ВЫБОР
		|			КОГДА &ОбработатьОбработанное
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ НЕ дкл_ОчередьСообщений.Обработано
		|		КОНЕЦ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		СообщениеОбОшибке = "Не найдена запись " + IDСообщения;
		ВызватьИсключение СообщениеОбОшибке;
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	
	Приложение = РегистрыСведений.дкл_Обработки.ПодключитьОбработку(
					ВыборкаДетальныеЗаписи.ТипСообщения, 
							ВыборкаДетальныеЗаписи.Направление);
							
	Если Приложение = Неопределено Тогда
		СообщениеОбОшибке = "Не найден обработчик";
	Иначе
		Попытка
			Результат = Приложение.ВыполнитьПриложение(ВыборкаДетальныеЗаписи);	
		Исключение
			Возврат "Ошибка: " + ОписаниеОшибки();
		КонецПопытки;
	КонецЕсли; 

	НаборЗаписей = СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.IDСообщения.Установить(IDСообщения);
	НаборЗаписей.Прочитать();

	Для каждого Запись Из НаборЗаписей Цикл
		
		ЗаполнитьЗначенияСвойств(Запись, Результат);		
		Запись.ДатаОбработки = ТекущаяДатаСеанса();
		Если ЗначениеЗаполнено(Запись.СсылкаНаОбъект) Тогда
			ТипЗначения = ТипЗнч(Запись.СсылкаНаОбъект);
			ОбъектМетаданных = Метаданные.НайтиПоТипу(ТипЗначения);
			Если Метаданные.Документы.Содержит(ОбъектМетаданных) ИЛИ Метаданные.Справочники.Содержит(ОбъектМетаданных) Тогда
				Запись.НавигационнаяСсылка = ПолучитьНавигационнуюСсылку(Запись.СсылкаНаОбъект);
			КонецЕсли;
		КонецЕсли; 
	КонецЦикла;
	
	НаборЗаписей.Записать();
	
	Возврат СообщениеОбОшибке;
	
КонецФункции // ()

//@skip-check export-procedure-missing-comment
Процедура ОчисткаСообщений() Экспорт
	
	// пока так, удаляем записи старше года
	Месяц = НачалоМесяца(ТекущаяДатаСеанса() - 365 * 86400);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	дкл_ОчередьСообщений.Месяц КАК Месяц
		|ИЗ
		|	РегистрСведений.дкл_ОчередьСообщений КАК дкл_ОчередьСообщений
		|ГДЕ
		|	дкл_ОчередьСообщений.Месяц <= &Месяц";
	
	Запрос.УстановитьПараметр("Месяц", Месяц);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Месяц.Установить(ВыборкаДетальныеЗаписи.Месяц);
		НаборЗаписей.Записать();
	КонецЦикла;
	
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
